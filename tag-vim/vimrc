runtime macros/matchit.vim

call plug#begin('~/.config/nvim/plugged')

Plug 'airblade/vim-gitgutter'
Plug 'christoomey/vim-tmux-navigator'
Plug 'jgdavey/tslime.vim'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'rust-lang/rust.vim'
Plug 'scrooloose/syntastic'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-markdown'
Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-sleuth'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-vinegar'
Plug 'vim-ruby/vim-ruby'

function! BuildYCM(info)
  if a:info.status == 'installed' || a:info.force
    !./install.py --clang-completer
  endif
endfunction
Plug 'Valloric/YouCompleteMe', { 'for': ['c', 'cpp'], 'do': function('BuildYCM') }

call plug#end()

" Syntax
" ======

colorscheme flattened_dark
set background=dark
set t_Co=256
let g:solarized_termtrans = 1

" General Config
" ==============

let mapleader=','

nnoremap <leader><space> :nohlsearch<CR>
nnoremap <Leader>o :CtrlP<CR>
nnoremap <Leader>w :w<CR>
nnoremap <C-p> :FZF<CR>

nnoremap j gj
nnoremap k gk
nnoremap <CR> o<Esc>

map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

command W w
command Q q

set autoread                    " Reload files changed outside vim
set backspace=indent,eol,start  " Allow backspace in insert mode
set encoding=utf-8
set hidden                      " Buffers can exist in the background
set history=1000                " Store lots of :cmdline history
set laststatus=2                " Always show status line
set lazyredraw
set number
set relativenumber
set showcmd                     " Show incomplete cmds down the bottom
set showmode                    " Show current mode down the bottom
set splitbelow                  " Opens horizontal split below current window
set splitright                  " Opens vertical split right of current window
set updatetime=1000

" Colors
" ======

let g:gitgutter_override_sign_column_highlight = 0

hi! link Visual CursorLine
hi LineNr ctermbg=NONE
hi CursorLine ctermfg=White
hi SignColumn ctermbg=NONE

hi clear StatusLine
hi clear StatusLineNC
hi StatusLine   term=bold cterm=bold ctermfg=Brown ctermbg=Black
hi StatusLineNC term=bold cterm=bold ctermfg=Brown ctermbg=Black

hi User1                      ctermfg=4          guifg=#40ffff            ctermbg=Black   " Identifier
hi User2                      ctermfg=2 gui=bold guifg=#ffff60            ctermbg=Black   " Statement
hi User3 term=bold cterm=bold ctermfg=1          guifg=White   guibg=Red  ctermbg=Black   " Error
hi User4                      ctermfg=1          guifg=Orange             ctermbg=Black   " Special
hi User5                      ctermfg=10         guifg=#80a0ff            ctermbg=Black   " Comment
hi User6 term=bold cterm=bold ctermfg=1          guifg=Red                ctermbg=Black   " WarningMsg

" Status Line
" ===========

set statusline=
set statusline+=%6*%m%r%*                          " modified, readonly
set statusline+=\ 
set statusline+=%5*%{expand('%:h')}/               " relative path to file's directory
set statusline+=%1*%t%*                            " file name

set statusline+=%=                                 " switch to RHS

set statusline+=\ 
set statusline+=\ 
set statusline+=%5*%L\ lines%*                     " number of lines
set statusline+=\ 

" General Shortcuts
" =================

nnoremap <leader>d :NERDTreeToggle<CR>
nnoremap <leader>f :NERDTreeFind<CR>

" Git Config
" ==========

autocmd FileType gitcommit setlocal textwidth=72
autocmd FileType gitcommit setlocal spell

" Search Settings
" ===============

set incsearch        " Find the next match as we type the search
set hlsearch         " Hilight searches by default
set ignorecase       " Search case insensitively
set smartcase        " Search case sensitively if our search contains uppercase letters
set viminfo='100,f1  " Save up to 100 marks, enable capital marks

" Turn Off Swap Files
" ===================

set noswapfile
set nobackup
set nowritebackup

" Indentation and Display
" =======================

set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab
set numberwidth=4
set nowrap

" Folds
" =====

set foldmethod=indent   " Fold based on indent
set foldnestmax=3       " Deepest fold is 3 levels
set nofoldenable        " Don't fold by default

" Completion
" ==========

set wildmode=longest,list,full
set wildmenu                        " Enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~,*.a     " Stuff to ignore when tab completing
set wildignore+=*vim/backups*

" Scrolling
" =========

set scrolloff=10
set sidescrolloff=15
set sidescroll=1

" Fix Delays
" ==========

if !has('gui_running')
  set ttimeoutlen=10
  augroup FastEscape
    autocmd!
    au InsertEnter * set timeoutlen=0
    au InsertLeave * set timeoutlen=1000
  augroup END
endif

